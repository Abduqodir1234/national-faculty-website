# /api/v1/user/<lang>
#------Methods---------
# GET
# PATCH
/user/{lang}:
  # GET method
  get:
    security:
    - bearerAuth: []
    summary: "User GET API"
    tags:
    - "User APIs"
    parameters:
    - name: "lang"
      required: true
      type: "string"
      default: "uz"
      in: "path"
      description: "Only uz, ru, en languages are supported"
    responses:
      200:
        description: "OK"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: false
                message:
                  type: "string"
                  default: ""
                data:
                  type: "object"
                  default: {}
      400:
        description: "Bad request"
      
      403:
        description: "Forbidden"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: true
                message:
                  type: "string"
                  default: "No token"
      404:
        description: "Not Found"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: true
                message:
                  type: "string"
                  default: "Not found"
# PATCH method
  patch:
    summary: "User Update API"
    tags:
    - "User APIs"
    security:
    - bearerAuth: []
    requestBody:
      description: "Body for send to backend"
      content:
         multipart/form-data:
          schema:
            $ref: "#/definitions/UserUpdate"
    parameters:
    - name: "lang"
      required: true
      type: "string"
      default: "uz"
      in: "path"
      description: "Only uz, ru, en languages are supported"
    responses:
      200:
        description: "OK"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: false
                message:
                  type: "string"
                  default: "Updated"
                data:
                  type: "array"
                  default: null
      400:
        description: "Bad request"
      
      403:
        description: "Forbidden"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: true
                message:
                  type: "string"
                  default: "No token"
      404:
        description: "Not Found"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: true
                message:
                  type: "string"
                  default: "Not found"

# /api/v1/user/register/<lang>
#------Methods---------
# POST
/user/register/{lang}:
  post:
    security:
    - bearerAuth: []
    summary: "User Register API"
    operationId: "uploadFile"
    tags:
    - User APIs
    requestBody:
      description: "Body for send to backend"
      content:
        multipart/form-data:
          schema:
            $ref: "#/definitions/Register"
    parameters:
    - name: "lang"
      in: "path"
      description: "Only uz, ru, en langs are supported"
      required: true
      type: "array"
      default: "uz"
      items:
        type: "string"
        enum:
        - "uz"
        - "ru"
        - "en"
    responses:
      201:
        description: "Created"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: false
                message:
                  type: "string"
                  default: "created"
                data:
                  type: "object"
                  default: null
      400:
        description: "Bad request"
      
      403:
        description: "Forbidden"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: true
                message:
                  type: "string"
                  default: "No token"

# /api/v1/user/login/<lang>
#------Methods---------
# POST
/user/login/{lang}:
  post:
    summary: "User Login API"
    operationId: "uploadFile"
    tags:
    - User APIs
    requestBody:
      description: "Body for send to backend"
      content:
        application/json:
          schema:
            $ref: "#/definitions/Login"
    parameters:
    - name: "lang"
      in: "path"
      description: "Only uz, ru, en langs are supported"
      required: true
      type: "array"
      default: "uz"
      items:
        type: "string"
        enum:
        - "uz"
        - "ru"
        - "en"
    responses:
      200:
        description: "OK"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: false
                message:
                  type: "string"
                  default: ""
                data:
                  type: "object"
                  default: {}
      400:
        description: "Bad request"
      

# /api/v1/user/logout/<lang>
#------Methods---------
# POST
/user/logout/{lang}:
  post:
    security:
    - bearerAuth: []
    summary: "User Logout API"
    operationId: "uploadFile"
    tags:
    - User APIs
    parameters:
    - name: "lang"
      in: "path"
      description: "Only uz, ru, en langs are supported"
      required: true
      type: "array"
      default: "uz"
      items:
        type: "string"
        enum:
        - "uz"
        - "ru"
        - "en"
    responses:
      200:
        description: "OK"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error: 
                  type: "boolean"
                  default: false
                message:
                  type: "string"
                  default: "Logged out"
                data:
                  type: "object"
                  default: null
      400:
        description: "Bad request"
      
